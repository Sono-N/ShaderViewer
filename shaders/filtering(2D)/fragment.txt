uniform bool back;
uniform sampler2D texture1; 

void main(void){
    vec2 scaling = vec2(1.0 / 256.0);
    mat3 filter = mat3(
            0, 1, 0,
			1, -4, 1,
			0, 1, 0);
    vec4 destColor = texture2D(texture1, -gl_FragCoord.st*scaling);
    destColor.xyz *=filter[1][1];
    destColor.xyz += (texture2D(texture1, (-gl_FragCoord.st + vec2(-1.0, -1.0))*scaling) * filter[0][0]).xyz;
    destColor.xyz += (texture2D(texture1, (-gl_FragCoord.st + vec2(0.0, -1.0))*scaling) * filter[0][1]).xyz;
    destColor.xyz += (texture2D(texture1, (-gl_FragCoord.st + vec2(1.0, -1.0))*scaling) * filter[0][2]).xyz;
    destColor.xyz += (texture2D(texture1, (-gl_FragCoord.st + vec2(-1.0, 0.0))*scaling) * filter[1][0]).xyz;
    destColor.xyz += (texture2D(texture1, (-gl_FragCoord.st + vec2(1.0, 0.0))*scaling) * filter[1][2]).xyz;
    destColor.xyz += (texture2D(texture1, (-gl_FragCoord.st + vec2(-1.0, 1.0))*scaling) * filter[2][1]).xyz;
    destColor.xyz += (texture2D(texture1, (-gl_FragCoord.st + vec2(0.0, 1.0))*scaling) * filter[2][2]).xyz;
    destColor.xyz += (texture2D(texture1, (-gl_FragCoord.st + vec2(1.0, 1.0))*scaling) * filter[2][0]).xyz;
    gl_FragColor = destColor;
}
      